## -*- mode:ulam -*-
#=t41091_test_compiler_elementandquark_memberselectoninstanceofconstructorcallresult
##      gen code output: 2 asserts
##
## cast element as atom unevaluable, element type lost
##
#!
Exit status: -11
Ue_A : QW { Bool(1) b(false);  QW m_q();  :QW<> Int(32) test() {  System s;  A a;  Atom(96) me = a.instanceof ( true )Self . ( )func .;  { me A as cond { A& me;  self b . me b . = s ( me b . )assert . } if s ( false )assert . else } Atom(96) me2 = A.instanceof ( true )Self . ( )func .;  { me2 A as cond { A& me2;  self b . me2 b . = s ( me2 b . )assert . } if s ( false )assert . else } 0 cast return } }
Uq_QW { <NOMAIN> }
Uq_System { <NOMAIN> }
##
## informed by t3913, t41089; see also t41375
##
#>A.ulam
  ulam 3;
element A : QW {
  Bool b;
  QW m_q;
  Int test(){
    System s;

    //immediate element (or Type)
    A a;
    Atom me = a.instanceof(true).func();

    if(me as A)
    {
      b = me.b; //uneval-ed, b still false in postfix output
      s.assert(me.b);
    }
    else
      s.assert(false);

    //by Type (wish fixed 20191118)
    Atom me2 = A.instanceof(true).func();
    if(me2 as A)
    {
      b = me2.b; //uneval-ed, b still false in postfix output
      s.assert(me2.b);
    }
    else
      s.assert(false);

    return 0;
  }

  Self(Bool barg)
  {
    b = barg;
  }
}

#:QW.ulam
  ulam 2;
quark QW {
  Atom func()
  {
    Atom a = self.atomof;
    return a;
  }
}

#:System.ulam
ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}
#.
